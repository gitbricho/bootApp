: Neither @ContextConfiguration nor @ContextHierarchy found for test class [bootapp.JutyuDBTest], using SpringBootContextLoader :buildDefaultMergedContextConfiguration
: Could not detect default resource locations for test class [bootapp.JutyuDBTest]: no resource found for suffixes {-context.xml, Context.groovy}. :generateDefaultLocations
: Could not detect default configuration classes for test class [bootapp.JutyuDBTest]: JutyuDBTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration. :detectDefaultConfigurationClasses
: Found @SpringBootConfiguration bootapp.App for test class bootapp.JutyuDBTest :getOrFindConfigurationClasses
: Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener] :getDefaultTestExecutionListenerClassNames
: Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@10e92f8f, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7ce3cb8e, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@78b66d36, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@5223e5ee, org.springframework.test.context.support.DirtiesContextTestExecutionListener@bef2d72, org.springframework.test.context.transaction.TransactionalTestExecutionListener@69b2283a, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@22a637e7, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@6fe7aac8, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@1d119efb, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@659a969b, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@76908cc0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@2473d930, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@35047d03] :getTestExecutionListeners
: HV000001: Hibernate Validator 5.3.6.Final :<clinit>
: Starting JutyuDBTest on tt-mbp.local with PID 22284 (started by bri_tcho in /Users/bri_tcho/_PRJ/ec_prj/bootApp.git/bootApp) :logStarting
: Running with Spring Boot v1.5.19.RELEASE, Spring v4.3.22.RELEASE :logStarting
: No active profile set, falling back to default profiles: default :logStartupProfileInfo
: Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5852c06f: startup date [Mon Feb 04 17:10:13 JST 2019]; root of context hierarchy :prepareRefresh
: Overriding bean definition for bean 'userRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] :registerBeanDefinition
: Overriding bean definition for bean 'meisaiRepo' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] :registerBeanDefinition
: Overriding bean definition for bean 'jutyuRepo' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] :registerBeanDefinition
: Overriding bean definition for bean 'kokyakuRepo' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] :registerBeanDefinition
: Overriding bean definition for bean 'managementServletContext' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.class]] :registerBeanDefinition
: Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$400a3a8d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) :postProcessAfterInitialization
: Tomcat initialized with port(s): 0 (http) :initialize
: Initializing ProtocolHandler ["http-nio-auto-1"] :log
: Starting service [Tomcat] :log
: Starting Servlet Engine: Apache Tomcat/8.5.37 :log
: Initializing Spring embedded WebApplicationContext :log
: Root WebApplicationContext: initialization completed in 3081 ms :prepareEmbeddedWebApplicationContext
: Mapping filter: 'metricsFilter' to: [/*] :configure
: Mapping filter: 'characterEncodingFilter' to: [/*] :configure
: Mapping filter: 'hiddenHttpMethodFilter' to: [/*] :configure
: Mapping filter: 'httpPutFormContentFilter' to: [/*] :configure
: Mapping filter: 'requestContextFilter' to: [/*] :configure
: Mapping filter: 'springSecurityFilterChain' to: [/*] :configure
: Mapping filter: 'webRequestLoggingFilter' to: [/*] :configure
: Mapping filter: 'applicationContextIdFilter' to: [/*] :configure
: Mapping servlet: 'dispatcherServlet' to [/] :onStartup
: Loaded JDBC driver: org.h2.Driver :setDriverClassName
: Building JPA container EntityManagerFactory for persistence unit 'default' :createNativeEntityManagerFactory
: Initialized JPA EntityManagerFactory for persistence unit 'default' :buildNativeEntityManagerFactory
: Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5852c06f: startup date [Mon Feb 04 17:10:13 JST 2019]; root of context hierarchy :initControllerAdviceCache
: Detected ResponseBodyAdvice bean in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice :initControllerAdviceCache
: Mapped "{[/login],methods=[GET]}" onto public java.lang.String bootapp.controller.HomeController.login() :register
: Mapped "{[/ || /home],methods=[GET]}" onto public java.lang.String bootapp.controller.HomeController.home(org.springframework.ui.Model) :register
: Mapped "{[/jutyu/syohin/{tanka}/{kosu}],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView bootapp.controller.JutyuController.getSyohin(int,int) :register
: Mapped "{[/jutyu_list],methods=[GET]}" onto public java.lang.String bootapp.controller.JutyuController.showJutyuList() :register
: Mapped "{[/jutyu/meisai/{meisaiId}],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView bootapp.controller.JutyuController.getJutyuMeisai(java.lang.Long) :register
: Mapped "{[/kokyaku],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView bootapp.controller.JutyuController.getKokyaku(java.lang.String,java.lang.String) :register
: Mapped "{[/kokyaku/{id}],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView bootapp.controller.JutyuController.getKokyaku(bootapp.model.Kokyaku) :register
: Mapped "{[/kokyaku/search/{str:.+}],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView bootapp.controller.JutyuController.searchKokyaku(java.util.List<bootapp.model.Kokyaku>) :register
: Mapped "{[/user_list],methods=[GET]}" onto public java.lang.String bootapp.controller.UserController.showUserList(org.springframework.ui.Model) :register
: Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest) :register
: Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) :register
: Mapped URL path [/error] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController] :registerHandler
: Mapped URL path [/login] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController] :registerHandler
: Mapped URL path [/home] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController] :registerHandler
: Root mapping to handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController] :registerHandler
: Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] :registerHandler
: Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] :registerHandler
: Detected @ExceptionHandler methods in repositoryRestExceptionHandler :initExceptionHandlerAdviceCache
: Detected ResponseBodyAdvice implementation in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice :initExceptionHandlerAdviceCache
: Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] :registerHandler
: [THYMELEAF][main] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead. :parse
: Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], [] :<init>
: Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6614289a, org.springframework.security.web.context.SecurityContextPersistenceFilter@b4d83ac, org.springframework.security.web.header.HeaderWriterFilter@4e26987b, org.springframework.security.web.csrf.CsrfFilter@40d10264, org.springframework.security.web.authentication.logout.LogoutFilter@687e561b, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@2a259f6f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@66944c7c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1468e880, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4148ce43, org.springframework.security.web.session.SessionManagementFilter@39342614, org.springframework.security.web.access.ExceptionTranslationFilter@9f2fe2e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@409395b9] :<init>
: Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception :register
: Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception :register
: Mapped "{[/{repository}/{id}/{property}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String) throws java.lang.Exception :register
: Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReferenceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception :register
: Mapped "{[/{repository}/{id}/{property}],methods=[PATCH || PUT || POST],consumes=[application/json || application/x-spring-data-compact+json || text/uri-list],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.createPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpMethod,org.springframework.hateoas.Resources<java.lang.Object>,java.io.Serializable,java.lang.String) throws java.lang.Exception :register
: Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReferenceId(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String) throws java.lang.Exception :register
: Mapped "{[/ || ],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositoryController.optionsForRepositories() :register
: Mapped "{[/ || ],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RepositoryLinksResource> org.springframework.data.rest.webmvc.RepositoryController.listRepositories() :register
: Mapped "{[/ || ],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryController.headForRepositories() :register
: Mapped "{[/{repository}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation) :register
: Mapped "{[/{repository}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable) throws org.springframework.web.HttpRequestMethodNotSupportedException :register
: Mapped "{[/{repository}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException :register
: Mapped "{[/{repository}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResourceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException :register
: Mapped "{[/{repository}],methods=[POST],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.postCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException :register
: Mapped "{[/{repository}/{id}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation) :register
: Mapped "{[/{repository}/{id}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.web.HttpRequestMethodNotSupportedException :register
: Mapped "{[/{repository}/{id}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.Resource<?>> org.springframework.data.rest.webmvc.RepositoryEntityController.getItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders) throws org.springframework.web.HttpRequestMethodNotSupportedException :register
: Mapped "{[/{repository}/{id}],methods=[PUT],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.putItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException :register
: Mapped "{[/{repository}/{id}],methods=[PATCH],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.patchItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException,org.springframework.data.rest.webmvc.ResourceNotFoundException :register
: Mapped "{[/{repository}/{id}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.deleteItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.support.ETag) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException :register
: Mapped "{[/{repository}/search],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearches(org.springframework.data.rest.webmvc.RootResourceInformation) :register
: Mapped "{[/{repository}/search],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.data.rest.webmvc.RepositorySearchesResource org.springframework.data.rest.webmvc.RepositorySearchController.listSearches(org.springframework.data.rest.webmvc.RootResourceInformation) :register
: Mapped "{[/{repository}/search],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearches(org.springframework.data.rest.webmvc.RootResourceInformation) :register
: Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.executeSearch(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders) :register
: Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/x-spring-data-compact+json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.data.rest.webmvc.RepositorySearchController.executeSearchCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpHeaders,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) :register
: Mapped "{[/{repository}/search/{search}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String) :register
: Mapped "{[/{repository}/search/{search}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String) :register
: Mapped "{[/profile/{repository}],methods=[GET],produces=[application/alps+json || */*]}" onto org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RootResourceInformation> org.springframework.data.rest.webmvc.alps.AlpsController.descriptor(org.springframework.data.rest.webmvc.RootResourceInformation) :register
: Mapped "{[/profile/{repository}],methods=[OPTIONS],produces=[application/alps+json]}" onto org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.alps.AlpsController.alpsOptions() :register
: Mapped "{[/profile],methods=[OPTIONS]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.ProfileController.profileOptions() :register
: Mapped "{[/profile],methods=[GET]}" onto org.springframework.http.HttpEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.ProfileController.listAllFormsOfMetadata() :register
: Mapped "{[/profile/{repository}],methods=[GET],produces=[application/schema+json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.json.JsonSchema> org.springframework.data.rest.webmvc.RepositorySchemaController.schema(org.springframework.data.rest.webmvc.RootResourceInformation) :register
: Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke() :register
: Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke() :register
: Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke() :register
: Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke() :register
: Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String) :register
: Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>) :register
: Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke() :register
: Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal) :register
: Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String) :register
: Mapped "{[/logfile || /logfile.json],methods=[GET || HEAD]}" onto public void org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException,java.io.IOException :register
: Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke() :register
: Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException :register
: Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String) :register
: Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke() :register
: Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String) :register
: Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke() :register
: Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke() :register
: Mapped "{[/actuator || /actuator.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.boot.actuate.endpoint.mvc.HalJsonMvcEndpoint.links() :register
: Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke() :register
: Creating filter chain: org.springframework.boot.actuate.autoconfigure.ManagementWebSecurityAutoConfiguration$LazyEndpointPathRequestMatcher@166ddfb7, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5da3f32a, org.springframework.security.web.context.SecurityContextPersistenceFilter@6150afc6, org.springframework.security.web.header.HeaderWriterFilter@517bdce0, org.springframework.web.filter.CorsFilter@57b3d869, org.springframework.security.web.authentication.logout.LogoutFilter@672d8370, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@1dc9f5ad, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@49f50c8f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@46e6458d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@51f4439e, org.springframework.security.web.session.SessionManagementFilter@7c0b0bd9, org.springframework.security.web.access.ExceptionTranslationFilter@51df2a41, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5c9e3d01] :<init>
: Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/**']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3cf70afa, org.springframework.security.web.context.SecurityContextPersistenceFilter@74badf19, org.springframework.security.web.header.HeaderWriterFilter@7e94de5f, org.springframework.security.web.authentication.logout.LogoutFilter@2a510e0e, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@8315e4a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@59b3f754, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@18dbc1b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@66dd04e2, org.springframework.security.web.session.SessionManagementFilter@499c4d61, org.springframework.security.web.access.ExceptionTranslationFilter@1b36d248, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@23d978b] :<init>
: Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5852c06f: startup date [Mon Feb 04 17:10:13 JST 2019]; root of context hierarchy :initControllerAdviceCache
: Detected ResponseBodyAdvice bean in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice :initControllerAdviceCache
: Starting ProtocolHandler ["http-nio-auto-1"] :log
: Using a shared selector for servlet write/read :log
: Tomcat started on port(s): 61153 (http) :start
: Started JutyuDBTest in 27.577 seconds (JVM running for 28.761) :logStarted
: :&&&&&&&&&&&&&&& addJutyu(bootapp.JutyuDBTest) :starting
: 00000004 :createTestData
: >>> setUp で受注4件を追加. :addJutyu
: ----- 追加後:明細一覧 -------------------- :logAllMeisai
: bootapp.model.Meisai(id:101, version:1, syohin:商品１, tanka:100, suryo:2, jutyu:bootapp.model.Jutyu(id:1, version:1, jutyuBi:2015/09/01, nohinSaki:納品先１, jutyuGaku:600)) :lambda$1
: bootapp.model.Meisai(id:102, version:1, syohin:商品２, tanka:200, suryo:2, jutyu:bootapp.model.Jutyu(id:1, version:1, jutyuBi:2015/09/01, nohinSaki:納品先１, jutyuGaku:600)) :lambda$1
: -------------------- :lambda$0
: bootapp.model.Meisai(id:201, version:1, syohin:商品１, tanka:100, suryo:5, jutyu:bootapp.model.Jutyu(id:2, version:1, jutyuBi:2015/09/01, nohinSaki:納品先２, jutyuGaku:1100)) :lambda$1
: bootapp.model.Meisai(id:202, version:1, syohin:商品２, tanka:200, suryo:3, jutyu:bootapp.model.Jutyu(id:2, version:1, jutyuBi:2015/09/01, nohinSaki:納品先２, jutyuGaku:1100)) :lambda$1
: -------------------- :lambda$0
: bootapp.model.Meisai(id:301, version:1, syohin:商品１, tanka:100, suryo:5, jutyu:bootapp.model.Jutyu(id:3, version:1, jutyuBi:2015/09/02, nohinSaki:納品先３, jutyuGaku:3500)) :lambda$1
: bootapp.model.Meisai(id:302, version:1, syohin:商品２, tanka:200, suryo:3, jutyu:bootapp.model.Jutyu(id:3, version:1, jutyuBi:2015/09/02, nohinSaki:納品先３, jutyuGaku:3500)) :lambda$1
: bootapp.model.Meisai(id:303, version:1, syohin:商品３, tanka:300, suryo:8, jutyu:bootapp.model.Jutyu(id:3, version:1, jutyuBi:2015/09/02, nohinSaki:納品先３, jutyuGaku:3500)) :lambda$1
: -------------------- :lambda$0
: bootapp.model.Meisai(id:401, version:1, syohin:商品４, tanka:400, suryo:2, jutyu:bootapp.model.Jutyu(id:4, version:1, jutyuBi:2015/09/03, nohinSaki:納品先２, jutyuGaku:2300)) :lambda$1
: bootapp.model.Meisai(id:402, version:1, syohin:商品５, tanka:500, suryo:3, jutyu:bootapp.model.Jutyu(id:4, version:1, jutyuBi:2015/09/03, nohinSaki:納品先２, jutyuGaku:2300)) :lambda$1
: -------------------- :lambda$0
: :%%%%%%%%%%%% addJutyu(bootapp.JutyuDBTest) :finished
: :&&&&&&&&&&&&&&& deleteJutyu(bootapp.JutyuDBTest) :starting
: 00000004 :createTestData
: 受注削除：受注日 9/3 のデータを削除、カスケード削除により、 明細も削除される :deleteJutyu
: ----- 削除前の 9/3のデータ:明細一覧 -------------------- :logAllMeisai
: bootapp.model.Meisai(id:401, version:1, syohin:商品４, tanka:400, suryo:2, jutyu:bootapp.model.Jutyu(id:4, version:1, jutyuBi:2015/09/03, nohinSaki:納品先２, jutyuGaku:2300)) :lambda$1
: bootapp.model.Meisai(id:402, version:1, syohin:商品５, tanka:500, suryo:3, jutyu:bootapp.model.Jutyu(id:4, version:1, jutyuBi:2015/09/03, nohinSaki:納品先２, jutyuGaku:2300)) :lambda$1
: -------------------- :lambda$0
: ----- 削除後の 9/3のデータ:明細一覧 -------------------- :logAllMeisai
: :%%%%%%%%%%%% deleteJutyu(bootapp.JutyuDBTest) :finished
: :&&&&&&&&&&&&&&& updateSyohinTanka(bootapp.JutyuDBTest) :starting
: 00000004 :createTestData
: modify クエリーで商品単価を20%引きにする. :updateSyohinTanka
: ----- 割引前:明細一覧 -------------------- :logAllMeisai
: bootapp.model.Meisai(id:101, version:1, syohin:商品１, tanka:100, suryo:2, jutyu:bootapp.model.Jutyu(id:1, version:1, jutyuBi:2015/09/01, nohinSaki:納品先１, jutyuGaku:600)) :lambda$1
: bootapp.model.Meisai(id:102, version:1, syohin:商品２, tanka:200, suryo:2, jutyu:bootapp.model.Jutyu(id:1, version:1, jutyuBi:2015/09/01, nohinSaki:納品先１, jutyuGaku:600)) :lambda$1
: -------------------- :lambda$0
: bootapp.model.Meisai(id:201, version:1, syohin:商品１, tanka:100, suryo:5, jutyu:bootapp.model.Jutyu(id:2, version:1, jutyuBi:2015/09/01, nohinSaki:納品先２, jutyuGaku:1100)) :lambda$1
: bootapp.model.Meisai(id:202, version:1, syohin:商品２, tanka:200, suryo:3, jutyu:bootapp.model.Jutyu(id:2, version:1, jutyuBi:2015/09/01, nohinSaki:納品先２, jutyuGaku:1100)) :lambda$1
: -------------------- :lambda$0
: bootapp.model.Meisai(id:301, version:1, syohin:商品１, tanka:100, suryo:5, jutyu:bootapp.model.Jutyu(id:3, version:1, jutyuBi:2015/09/02, nohinSaki:納品先３, jutyuGaku:3500)) :lambda$1
: bootapp.model.Meisai(id:302, version:1, syohin:商品２, tanka:200, suryo:3, jutyu:bootapp.model.Jutyu(id:3, version:1, jutyuBi:2015/09/02, nohinSaki:納品先３, jutyuGaku:3500)) :lambda$1
: bootapp.model.Meisai(id:303, version:1, syohin:商品３, tanka:300, suryo:8, jutyu:bootapp.model.Jutyu(id:3, version:1, jutyuBi:2015/09/02, nohinSaki:納品先３, jutyuGaku:3500)) :lambda$1
: -------------------- :lambda$0
: bootapp.model.Meisai(id:401, version:1, syohin:商品４, tanka:400, suryo:2, jutyu:bootapp.model.Jutyu(id:4, version:1, jutyuBi:2015/09/03, nohinSaki:納品先２, jutyuGaku:2300)) :lambda$1
: bootapp.model.Meisai(id:402, version:1, syohin:商品５, tanka:500, suryo:3, jutyu:bootapp.model.Jutyu(id:4, version:1, jutyuBi:2015/09/03, nohinSaki:納品先２, jutyuGaku:2300)) :lambda$1
: -------------------- :lambda$0
: ----- 割引後:明細一覧 -------------------- :logAllMeisai
: bootapp.model.Meisai(id:101, version:2, syohin:商品１, tanka:80, suryo:2, jutyu:bootapp.model.Jutyu(id:1, version:1, jutyuBi:2015/09/01, nohinSaki:納品先１, jutyuGaku:480)) :lambda$1
: bootapp.model.Meisai(id:102, version:2, syohin:商品２, tanka:160, suryo:2, jutyu:bootapp.model.Jutyu(id:1, version:1, jutyuBi:2015/09/01, nohinSaki:納品先１, jutyuGaku:480)) :lambda$1
: -------------------- :lambda$0
: bootapp.model.Meisai(id:201, version:2, syohin:商品１, tanka:80, suryo:5, jutyu:bootapp.model.Jutyu(id:2, version:1, jutyuBi:2015/09/01, nohinSaki:納品先２, jutyuGaku:880)) :lambda$1
: bootapp.model.Meisai(id:202, version:2, syohin:商品２, tanka:160, suryo:3, jutyu:bootapp.model.Jutyu(id:2, version:1, jutyuBi:2015/09/01, nohinSaki:納品先２, jutyuGaku:880)) :lambda$1
: -------------------- :lambda$0
: bootapp.model.Meisai(id:301, version:2, syohin:商品１, tanka:80, suryo:5, jutyu:bootapp.model.Jutyu(id:3, version:1, jutyuBi:2015/09/02, nohinSaki:納品先３, jutyuGaku:2800)) :lambda$1
: bootapp.model.Meisai(id:302, version:2, syohin:商品２, tanka:160, suryo:3, jutyu:bootapp.model.Jutyu(id:3, version:1, jutyuBi:2015/09/02, nohinSaki:納品先３, jutyuGaku:2800)) :lambda$1
: bootapp.model.Meisai(id:303, version:2, syohin:商品３, tanka:240, suryo:8, jutyu:bootapp.model.Jutyu(id:3, version:1, jutyuBi:2015/09/02, nohinSaki:納品先３, jutyuGaku:2800)) :lambda$1
: -------------------- :lambda$0
: bootapp.model.Meisai(id:401, version:2, syohin:商品４, tanka:320, suryo:2, jutyu:bootapp.model.Jutyu(id:4, version:1, jutyuBi:2015/09/03, nohinSaki:納品先２, jutyuGaku:1840)) :lambda$1
: bootapp.model.Meisai(id:402, version:2, syohin:商品５, tanka:400, suryo:3, jutyu:bootapp.model.Jutyu(id:4, version:1, jutyuBi:2015/09/03, nohinSaki:納品先２, jutyuGaku:1840)) :lambda$1
: -------------------- :lambda$0
: :%%%%%%%%%%%% updateSyohinTanka(bootapp.JutyuDBTest) :finished
: :&&&&&&&&&&&&&&& findJutyu(bootapp.JutyuDBTest) :starting
: 00000004 :createTestData
: >>> 商品２で受注を検索: findBySyohin("商品２") :findJutyu
: ----- 検索結果:明細一覧 -------------------- :logAllMeisai
: bootapp.model.Meisai(id:101, version:1, syohin:商品１, tanka:100, suryo:2, jutyu:bootapp.model.Jutyu(id:1, version:1, jutyuBi:2015/09/01, nohinSaki:納品先１, jutyuGaku:600)) :lambda$1
: bootapp.model.Meisai(id:102, version:1, syohin:商品２, tanka:200, suryo:2, jutyu:bootapp.model.Jutyu(id:1, version:1, jutyuBi:2015/09/01, nohinSaki:納品先１, jutyuGaku:600)) :lambda$1
: -------------------- :lambda$0
: bootapp.model.Meisai(id:201, version:1, syohin:商品１, tanka:100, suryo:5, jutyu:bootapp.model.Jutyu(id:2, version:1, jutyuBi:2015/09/01, nohinSaki:納品先２, jutyuGaku:1100)) :lambda$1
: bootapp.model.Meisai(id:202, version:1, syohin:商品２, tanka:200, suryo:3, jutyu:bootapp.model.Jutyu(id:2, version:1, jutyuBi:2015/09/01, nohinSaki:納品先２, jutyuGaku:1100)) :lambda$1
: -------------------- :lambda$0
: bootapp.model.Meisai(id:301, version:1, syohin:商品１, tanka:100, suryo:5, jutyu:bootapp.model.Jutyu(id:3, version:1, jutyuBi:2015/09/02, nohinSaki:納品先３, jutyuGaku:3500)) :lambda$1
: bootapp.model.Meisai(id:302, version:1, syohin:商品２, tanka:200, suryo:3, jutyu:bootapp.model.Jutyu(id:3, version:1, jutyuBi:2015/09/02, nohinSaki:納品先３, jutyuGaku:3500)) :lambda$1
: bootapp.model.Meisai(id:303, version:1, syohin:商品３, tanka:300, suryo:8, jutyu:bootapp.model.Jutyu(id:3, version:1, jutyuBi:2015/09/02, nohinSaki:納品先３, jutyuGaku:3500)) :lambda$1
: -------------------- :lambda$0
: >>> 受注額で受注を検索: findJutyugakuGreaterThan(1300) :findJutyu
: ----- 検索結果:明細一覧 -------------------- :logAllMeisai
: bootapp.model.Meisai(id:301, version:1, syohin:商品１, tanka:100, suryo:5, jutyu:bootapp.model.Jutyu(id:3, version:1, jutyuBi:2015/09/02, nohinSaki:納品先３, jutyuGaku:3500)) :lambda$1
: bootapp.model.Meisai(id:302, version:1, syohin:商品２, tanka:200, suryo:3, jutyu:bootapp.model.Jutyu(id:3, version:1, jutyuBi:2015/09/02, nohinSaki:納品先３, jutyuGaku:3500)) :lambda$1
: bootapp.model.Meisai(id:303, version:1, syohin:商品３, tanka:300, suryo:8, jutyu:bootapp.model.Jutyu(id:3, version:1, jutyuBi:2015/09/02, nohinSaki:納品先３, jutyuGaku:3500)) :lambda$1
: -------------------- :lambda$0
: bootapp.model.Meisai(id:401, version:1, syohin:商品４, tanka:400, suryo:2, jutyu:bootapp.model.Jutyu(id:4, version:1, jutyuBi:2015/09/03, nohinSaki:納品先２, jutyuGaku:2300)) :lambda$1
: bootapp.model.Meisai(id:402, version:1, syohin:商品５, tanka:500, suryo:3, jutyu:bootapp.model.Jutyu(id:4, version:1, jutyuBi:2015/09/03, nohinSaki:納品先２, jutyuGaku:2300)) :lambda$1
: -------------------- :lambda$0
: >>> 受注別、受注額一覧: jutyuBetuJutyugaku() :findJutyu
: [bootapp.model.Jutyu(id:1, version:1, jutyuBi:2015/09/01, nohinSaki:納品先１, jutyuGaku:600), 600] :accept
: [bootapp.model.Jutyu(id:2, version:1, jutyuBi:2015/09/01, nohinSaki:納品先２, jutyuGaku:1100), 1100] :accept
: [bootapp.model.Jutyu(id:3, version:1, jutyuBi:2015/09/02, nohinSaki:納品先３, jutyuGaku:3500), 3500] :accept
: [bootapp.model.Jutyu(id:4, version:1, jutyuBi:2015/09/03, nohinSaki:納品先２, jutyuGaku:2300), 2300] :accept
: >>> 商品別、受注額一覧: syohinBetuJutyugaku() :findJutyu
: [商品１, 1200] :accept
: [商品２, 1600] :accept
: [商品３, 2400] :accept
: [商品４, 800] :accept
: [商品５, 1500] :accept
: :%%%%%%%%%%%% findJutyu(bootapp.JutyuDBTest) :finished
: :&&&&&&&&&&&&&&& updateJutyu01(bootapp.JutyuDBTest) :starting
: 00000004 :createTestData
: >> 受注日 9/2 のデータ(jutyu.id=3)の 受注日を 9/12 に変更 :updateJutyu01
: bootapp.model.Jutyu(id:3, version:1, jutyuBi:2015/09/02, nohinSaki:納品先３, jutyuGaku:3500) :updateJutyu01
: 更新後 ---------------------- :updateJutyu01
: bootapp.model.Jutyu(id:3, version:2, jutyuBi:2015/09/12, nohinSaki:納品先３, jutyuGaku:3500) :updateJutyu01
: :%%%%%%%%%%%% updateJutyu01(bootapp.JutyuDBTest) :finished
: :&&&&&&&&&&&&&&& updateJutyu02(bootapp.JutyuDBTest) :starting
: 00000004 :createTestData
: >> 受注日 9/3 のデータ(jutyu.id=4)の 商品４(meisai.id=401L)の数量を 2->3 に変更 :updateJutyu02
: bootapp.model.Meisai(id:401, version:1, syohin:商品４, tanka:400, suryo:2, jutyu:bootapp.model.Jutyu(id:4, version:1, jutyuBi:2015/09/03, nohinSaki:納品先２, jutyuGaku:2300)) :updateJutyu02
: bootapp.model.Meisai(id:402, version:1, syohin:商品５, tanka:500, suryo:3, jutyu:bootapp.model.Jutyu(id:4, version:1, jutyuBi:2015/09/03, nohinSaki:納品先２, jutyuGaku:2700)) :updateJutyu02
: ----- 更新後:明細一覧 -------------------- :logAllMeisai
: bootapp.model.Meisai(id:401, version:2, syohin:商品４, tanka:400, suryo:3, jutyu:bootapp.model.Jutyu(id:4, version:2, jutyuBi:2015/09/03, nohinSaki:納品先２, jutyuGaku:2700)) :lambda$1
: bootapp.model.Meisai(id:402, version:1, syohin:商品５, tanka:500, suryo:3, jutyu:bootapp.model.Jutyu(id:4, version:2, jutyuBi:2015/09/03, nohinSaki:納品先２, jutyuGaku:2700)) :lambda$1
: -------------------- :lambda$0
: :%%%%%%%%%%%% updateJutyu02(bootapp.JutyuDBTest) :finished
: :&&&&&&&&&&&&&&& updateJutyu03(bootapp.JutyuDBTest) :starting
: 00000004 :createTestData
: >> 受注日 9/1 のデータ(jutyu.id=1,2)に明細２件を追加 :updateJutyu03
: bootapp.model.Meisai(id:101, version:1, syohin:商品１, tanka:100, suryo:2, jutyu:bootapp.model.Jutyu(id:1, version:1, jutyuBi:2015/09/01, nohinSaki:納品先１, jutyuGaku:600)) :lambda$6
: bootapp.model.Meisai(id:102, version:1, syohin:商品２, tanka:200, suryo:2, jutyu:bootapp.model.Jutyu(id:1, version:1, jutyuBi:2015/09/01, nohinSaki:納品先１, jutyuGaku:600)) :lambda$6
: bootapp.model.Meisai(id:201, version:1, syohin:商品１, tanka:100, suryo:5, jutyu:bootapp.model.Jutyu(id:2, version:1, jutyuBi:2015/09/01, nohinSaki:納品先２, jutyuGaku:1100)) :lambda$6
: bootapp.model.Meisai(id:202, version:1, syohin:商品２, tanka:200, suryo:3, jutyu:bootapp.model.Jutyu(id:2, version:1, jutyuBi:2015/09/01, nohinSaki:納品先２, jutyuGaku:1100)) :lambda$6
: 追加後 ---------------------- :updateJutyu03
: bootapp.model.Meisai(id:101, version:1, syohin:商品１, tanka:100, suryo:2, jutyu:bootapp.model.Jutyu(id:1, version:2, jutyuBi:2015/09/01, nohinSaki:納品先１, jutyuGaku:14300)) :lambda$7
: bootapp.model.Meisai(id:102, version:1, syohin:商品２, tanka:200, suryo:2, jutyu:bootapp.model.Jutyu(id:1, version:2, jutyuBi:2015/09/01, nohinSaki:納品先１, jutyuGaku:14300)) :lambda$7
: bootapp.model.Meisai(id:112, version:1, syohin:商品７, tanka:700, suryo:11, jutyu:bootapp.model.Jutyu(id:1, version:2, jutyuBi:2015/09/01, nohinSaki:納品先１, jutyuGaku:14300)) :lambda$7
: bootapp.model.Meisai(id:111, version:1, syohin:商品６, tanka:600, suryo:10, jutyu:bootapp.model.Jutyu(id:1, version:2, jutyuBi:2015/09/01, nohinSaki:納品先１, jutyuGaku:14300)) :lambda$7
: bootapp.model.Meisai(id:201, version:1, syohin:商品１, tanka:100, suryo:5, jutyu:bootapp.model.Jutyu(id:2, version:2, jutyuBi:2015/09/01, nohinSaki:納品先２, jutyuGaku:14800)) :lambda$7
: bootapp.model.Meisai(id:202, version:1, syohin:商品２, tanka:200, suryo:3, jutyu:bootapp.model.Jutyu(id:2, version:2, jutyuBi:2015/09/01, nohinSaki:納品先２, jutyuGaku:14800)) :lambda$7
: bootapp.model.Meisai(id:211, version:1, syohin:商品６, tanka:600, suryo:10, jutyu:bootapp.model.Jutyu(id:2, version:2, jutyuBi:2015/09/01, nohinSaki:納品先２, jutyuGaku:14800)) :lambda$7
: bootapp.model.Meisai(id:212, version:1, syohin:商品７, tanka:700, suryo:11, jutyu:bootapp.model.Jutyu(id:2, version:2, jutyuBi:2015/09/01, nohinSaki:納品先２, jutyuGaku:14800)) :lambda$7
: :%%%%%%%%%%%% updateJutyu03(bootapp.JutyuDBTest) :finished
: :&&&&&&&&&&&&&&& updateJutyu04(bootapp.JutyuDBTest) :starting
: 00000004 :createTestData
: >> 受注日 9/1 のデータ(jutyu.id=1,2)から商品２の明細を削除 :updateJutyu04
: bootapp.model.Meisai(id:101, version:1, syohin:商品１, tanka:100, suryo:2, jutyu:bootapp.model.Jutyu(id:1, version:1, jutyuBi:2015/09/01, nohinSaki:納品先１, jutyuGaku:600)) :lambda$8
: bootapp.model.Meisai(id:102, version:1, syohin:商品２, tanka:200, suryo:2, jutyu:bootapp.model.Jutyu(id:1, version:1, jutyuBi:2015/09/01, nohinSaki:納品先１, jutyuGaku:600)) :lambda$8
: bootapp.model.Meisai(id:201, version:1, syohin:商品１, tanka:100, suryo:5, jutyu:bootapp.model.Jutyu(id:2, version:1, jutyuBi:2015/09/01, nohinSaki:納品先２, jutyuGaku:1100)) :lambda$8
: bootapp.model.Meisai(id:202, version:1, syohin:商品２, tanka:200, suryo:3, jutyu:bootapp.model.Jutyu(id:2, version:1, jutyuBi:2015/09/01, nohinSaki:納品先２, jutyuGaku:1100)) :lambda$8
: ----- 削除後の9/1のデータ:明細一覧 -------------------- :logAllMeisai
: bootapp.model.Meisai(id:101, version:1, syohin:商品１, tanka:100, suryo:2, jutyu:bootapp.model.Jutyu(id:1, version:2, jutyuBi:2015/09/01, nohinSaki:納品先１, jutyuGaku:200)) :lambda$1
: -------------------- :lambda$0
: bootapp.model.Meisai(id:201, version:1, syohin:商品１, tanka:100, suryo:5, jutyu:bootapp.model.Jutyu(id:2, version:2, jutyuBi:2015/09/01, nohinSaki:納品先２, jutyuGaku:500)) :lambda$1
: -------------------- :lambda$0
: :%%%%%%%%%%%% updateJutyu04(bootapp.JutyuDBTest) :finished
: Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5852c06f: startup date [Mon Feb 04 17:10:13 JST 2019]; root of context hierarchy :doClose
: Closing JPA EntityManagerFactory for persistence unit 'default' :destroy
: Neither @ContextConfiguration nor @ContextHierarchy found for test class [bootapp.JutyuControllerTest], using SpringBootContextLoader :buildDefaultMergedContextConfiguration
: Could not detect default resource locations for test class [bootapp.JutyuControllerTest]: no resource found for suffixes {-context.xml, Context.groovy}. :generateDefaultLocations
: Could not detect default configuration classes for test class [bootapp.JutyuControllerTest]: JutyuControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration. :detectDefaultConfigurationClasses
: Found @SpringBootConfiguration bootapp.App for test class bootapp.JutyuControllerTest :getOrFindConfigurationClasses
: Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener] :getDefaultTestExecutionListenerClassNames
: Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7f552bd3, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@3c22fc4c, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@460d0a57, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@47d90b9e, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1184ab05, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3aefe5e5, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@149e0f5d, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@1b1473ab, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@2f7c2f4f, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@6af93788, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@ef9296d, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@36c88a32, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7880cdf3] :getTestExecutionListeners
: HV000001: Hibernate Validator 5.3.6.Final :<clinit>
: Starting JutyuControllerTest on tt-mbp.local with PID 22298 (started by bri_tcho in /Users/bri_tcho/_PRJ/ec_prj/bootApp.git/bootApp) :logStarting
: Running with Spring Boot v1.5.19.RELEASE, Spring v4.3.22.RELEASE :logStarting
: No active profile set, falling back to default profiles: default :logStartupProfileInfo
: Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2bdd8394: startup date [Mon Feb 04 17:12:21 JST 2019]; root of context hierarchy :prepareRefresh
: Overriding bean definition for bean 'jutyuRepo' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] :registerBeanDefinition
: Overriding bean definition for bean 'meisaiRepo' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] :registerBeanDefinition
: Overriding bean definition for bean 'userRepository' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] :registerBeanDefinition
: Overriding bean definition for bean 'kokyakuRepo' with a different definition: replacing [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] :registerBeanDefinition
: Overriding bean definition for bean 'managementServletContext' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.class]] :registerBeanDefinition
: Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b2b810f1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) :postProcessAfterInitialization
: Tomcat initialized with port(s): 0 (http) :initialize
: Initializing ProtocolHandler ["http-nio-auto-1"] :log
: Starting service [Tomcat] :log
: Starting Servlet Engine: Apache Tomcat/8.5.37 :log
: Initializing Spring embedded WebApplicationContext :log
: Root WebApplicationContext: initialization completed in 3075 ms :prepareEmbeddedWebApplicationContext
: Mapping filter: 'metricsFilter' to: [/*] :configure
: Mapping filter: 'characterEncodingFilter' to: [/*] :configure
: Mapping filter: 'hiddenHttpMethodFilter' to: [/*] :configure
: Mapping filter: 'httpPutFormContentFilter' to: [/*] :configure
: Mapping filter: 'requestContextFilter' to: [/*] :configure
: Mapping filter: 'springSecurityFilterChain' to: [/*] :configure
: Mapping filter: 'webRequestLoggingFilter' to: [/*] :configure
: Mapping filter: 'applicationContextIdFilter' to: [/*] :configure
: Mapping servlet: 'dispatcherServlet' to [/] :onStartup
: Loaded JDBC driver: org.h2.Driver :setDriverClassName
: Building JPA container EntityManagerFactory for persistence unit 'default' :createNativeEntityManagerFactory
: Initialized JPA EntityManagerFactory for persistence unit 'default' :buildNativeEntityManagerFactory
: Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2bdd8394: startup date [Mon Feb 04 17:12:21 JST 2019]; root of context hierarchy :initControllerAdviceCache
: Detected ResponseBodyAdvice bean in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice :initControllerAdviceCache
: Mapped "{[/ || /home],methods=[GET]}" onto public java.lang.String bootapp.controller.HomeController.home(org.springframework.ui.Model) :register
: Mapped "{[/login],methods=[GET]}" onto public java.lang.String bootapp.controller.HomeController.login() :register
: Mapped "{[/jutyu_list],methods=[GET]}" onto public java.lang.String bootapp.controller.JutyuController.showJutyuList() :register
: Mapped "{[/jutyu/meisai/{meisaiId}],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView bootapp.controller.JutyuController.getJutyuMeisai(java.lang.Long) :register
: Mapped "{[/jutyu/syohin/{tanka}/{kosu}],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView bootapp.controller.JutyuController.getSyohin(int,int) :register
: Mapped "{[/kokyaku],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView bootapp.controller.JutyuController.getKokyaku(java.lang.String,java.lang.String) :register
: Mapped "{[/kokyaku/{id}],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView bootapp.controller.JutyuController.getKokyaku(bootapp.model.Kokyaku) :register
: Mapped "{[/kokyaku/search/{str:.+}],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView bootapp.controller.JutyuController.searchKokyaku(java.util.List<bootapp.model.Kokyaku>) :register
: Mapped "{[/user_list],methods=[GET]}" onto public java.lang.String bootapp.controller.UserController.showUserList(org.springframework.ui.Model) :register
: Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest) :register
: Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) :register
: Mapped URL path [/error] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController] :registerHandler
: Mapped URL path [/login] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController] :registerHandler
: Mapped URL path [/home] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController] :registerHandler
: Root mapping to handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController] :registerHandler
: Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] :registerHandler
: Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] :registerHandler
: Detected @ExceptionHandler methods in repositoryRestExceptionHandler :initExceptionHandlerAdviceCache
: Detected ResponseBodyAdvice implementation in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice :initExceptionHandlerAdviceCache
: Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] :registerHandler
: [THYMELEAF][main] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead. :parse
: Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], [] :<init>
: Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@57bac3f0, org.springframework.security.web.context.SecurityContextPersistenceFilter@1fca53a7, org.springframework.security.web.header.HeaderWriterFilter@40d10264, org.springframework.security.web.csrf.CsrfFilter@407b41e6, org.springframework.security.web.authentication.logout.LogoutFilter@79273a4f, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@4e9ea32f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@21e39b82, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4780341, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@55f6f965, org.springframework.security.web.session.SessionManagementFilter@53918b5e, org.springframework.security.web.access.ExceptionTranslationFilter@67593f7b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4a5066f5] :<init>
: Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception :register
: Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception :register
: Mapped "{[/{repository}/{id}/{property}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String) throws java.lang.Exception :register
: Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReferenceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception :register
: Mapped "{[/{repository}/{id}/{property}],methods=[PATCH || PUT || POST],consumes=[application/json || application/x-spring-data-compact+json || text/uri-list],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.createPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpMethod,org.springframework.hateoas.Resources<java.lang.Object>,java.io.Serializable,java.lang.String) throws java.lang.Exception :register
: Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReferenceId(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String) throws java.lang.Exception :register
: Mapped "{[/ || ],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositoryController.optionsForRepositories() :register
: Mapped "{[/ || ],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryController.headForRepositories() :register
: Mapped "{[/ || ],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RepositoryLinksResource> org.springframework.data.rest.webmvc.RepositoryController.listRepositories() :register
: Mapped "{[/{repository}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation) :register
: Mapped "{[/{repository}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable) throws org.springframework.web.HttpRequestMethodNotSupportedException :register
: Mapped "{[/{repository}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException :register
: Mapped "{[/{repository}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResourceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException :register
: Mapped "{[/{repository}],methods=[POST],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.postCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException :register
: Mapped "{[/{repository}/{id}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation) :register
: Mapped "{[/{repository}/{id}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.web.HttpRequestMethodNotSupportedException :register
: Mapped "{[/{repository}/{id}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.Resource<?>> org.springframework.data.rest.webmvc.RepositoryEntityController.getItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders) throws org.springframework.web.HttpRequestMethodNotSupportedException :register
: Mapped "{[/{repository}/{id}],methods=[PUT],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.putItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException :register
: Mapped "{[/{repository}/{id}],methods=[PATCH],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.patchItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException,org.springframework.data.rest.webmvc.ResourceNotFoundException :register
: Mapped "{[/{repository}/{id}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.deleteItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.support.ETag) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException :register
: Mapped "{[/{repository}/search],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearches(org.springframework.data.rest.webmvc.RootResourceInformation) :register
: Mapped "{[/{repository}/search],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearches(org.springframework.data.rest.webmvc.RootResourceInformation) :register
: Mapped "{[/{repository}/search],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.data.rest.webmvc.RepositorySearchesResource org.springframework.data.rest.webmvc.RepositorySearchController.listSearches(org.springframework.data.rest.webmvc.RootResourceInformation) :register
: Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.executeSearch(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders) :register
: Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/x-spring-data-compact+json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.data.rest.webmvc.RepositorySearchController.executeSearchCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpHeaders,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) :register
: Mapped "{[/{repository}/search/{search}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String) :register
: Mapped "{[/{repository}/search/{search}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String) :register
: Mapped "{[/profile/{repository}],methods=[GET],produces=[application/alps+json || */*]}" onto org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RootResourceInformation> org.springframework.data.rest.webmvc.alps.AlpsController.descriptor(org.springframework.data.rest.webmvc.RootResourceInformation) :register
: Mapped "{[/profile/{repository}],methods=[OPTIONS],produces=[application/alps+json]}" onto org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.alps.AlpsController.alpsOptions() :register
: Mapped "{[/profile],methods=[OPTIONS]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.ProfileController.profileOptions() :register
: Mapped "{[/profile],methods=[GET]}" onto org.springframework.http.HttpEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.ProfileController.listAllFormsOfMetadata() :register
: Mapped "{[/profile/{repository}],methods=[GET],produces=[application/schema+json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.json.JsonSchema> org.springframework.data.rest.webmvc.RepositorySchemaController.schema(org.springframework.data.rest.webmvc.RootResourceInformation) :register
: Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String) :register
: Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String) :register
: Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke() :register
: Mapped "{[/actuator || /actuator.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.boot.actuate.endpoint.mvc.HalJsonMvcEndpoint.links() :register
: Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke() :register
: Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String) :register
: Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>) :register
: Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke() :register
: Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException :register
: Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke() :register
: Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke() :register
: Mapped "{[/logfile || /logfile.json],methods=[GET || HEAD]}" onto public void org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException,java.io.IOException :register
: Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal) :register
: Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke() :register
: Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke() :register
: Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke() :register
: Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke() :register
: Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String) :register
: Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke() :register
: Creating filter chain: org.springframework.boot.actuate.autoconfigure.ManagementWebSecurityAutoConfiguration$LazyEndpointPathRequestMatcher@66b90ab3, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@16e4db59, org.springframework.security.web.context.SecurityContextPersistenceFilter@670c171c, org.springframework.security.web.header.HeaderWriterFilter@7ccf6114, org.springframework.web.filter.CorsFilter@33fec21, org.springframework.security.web.authentication.logout.LogoutFilter@6fcc0a1, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@7d156f8f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@61d42275, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6614289a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@12a0d249, org.springframework.security.web.session.SessionManagementFilter@3df3410a, org.springframework.security.web.access.ExceptionTranslationFilter@2a259f6f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@521c67f0] :<init>
: Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/**']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@166ddfb7, org.springframework.security.web.context.SecurityContextPersistenceFilter@74231642, org.springframework.security.web.header.HeaderWriterFilter@4c02899, org.springframework.security.web.authentication.logout.LogoutFilter@5e055ce1, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@3278d065, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4a6facb0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4feec184, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5da3f32a, org.springframework.security.web.session.SessionManagementFilter@5b895e76, org.springframework.security.web.access.ExceptionTranslationFilter@24435620, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3c8758d1] :<init>
: Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2bdd8394: startup date [Mon Feb 04 17:12:21 JST 2019]; root of context hierarchy :initControllerAdviceCache
: Detected ResponseBodyAdvice bean in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice :initControllerAdviceCache
: Starting ProtocolHandler ["http-nio-auto-1"] :log
: Using a shared selector for servlet write/read :log
: Tomcat started on port(s): 61159 (http) :start
: Started JutyuControllerTest in 27.209 seconds (JVM running for 28.293) :logStarted
: Initializing Spring FrameworkServlet '' :log
: FrameworkServlet '': initialization started :initServletBean
: FrameworkServlet '': initialization completed in 29 ms :initServletBean
: &&&&&&&&&&&&&&& GetJutyuMeisai :  :logTestHeader
: >>>>> サンプルインターセプター::preHandle :preHandle
: >>>>> サンプルインターセプター::postHandle :postHandle
: >>>>> サンプルインターセプター::afterCompletion :afterCompletion
: Initializing Spring FrameworkServlet '' :log
: FrameworkServlet '': initialization started :initServletBean
: FrameworkServlet '': initialization completed in 6 ms :initServletBean
: &&&&&&&&&&&&&&& GetJutyuSyohin :  :logTestHeader
: >>>>> サンプルインターセプター::preHandle :preHandle
: >>>>> サンプルインターセプター::postHandle :postHandle
: >>>>> サンプルインターセプター::afterCompletion :afterCompletion
: Initializing Spring FrameworkServlet '' :log
: FrameworkServlet '': initialization started :initServletBean
: FrameworkServlet '': initialization completed in 9 ms :initServletBean
: &&&&&&&&&&&&&&& GetKokyaku :  :logTestHeader
: >>>>> サンプルインターセプター::preHandle :preHandle
: >>>>> サンプルインターセプター::postHandle :postHandle
: >>>>> サンプルインターセプター::afterCompletion :afterCompletion
: Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2bdd8394: startup date [Mon Feb 04 17:12:21 JST 2019]; root of context hierarchy :doClose
: Closing JPA EntityManagerFactory for persistence unit 'default' :destroy
